import zipfile
import xml.etree.ElementTree as ET
import os
import shutil

def remove_all_permissions(apk_path):
    # Tentukan direktori untuk ekstraksi dan hasil
    extract_dir = 'temp_dir'
    modified_apk_path = 'modified.apk'

    # Ekstrak APK
    print(f"Mengekstrak {apk_path}...")
    with zipfile.ZipFile(apk_path, 'r') as apk_zip:
        apk_zip.extractall(extract_dir)

    # Path ke AndroidManifest.xml
    manifest_path = os.path.join(extract_dir, 'AndroidManifest.xml')
    if not os.path.isfile(manifest_path):
        print("AndroidManifest.xml tidak ditemukan.")
        shutil.rmtree(extract_dir)  # Bersihkan direktori sementara
        return

    # Baca dan hapus semua entri izin dari AndroidManifest.xml
    print("Menghapus izin dari AndroidManifest.xml...")
    tree = ET.parse(manifest_path)
    root = tree.getroot()

    # Namespace untuk elemen XML
    namespace = {'android': 'http://schemas.android.com/apk/res/android'}

    # Temukan dan hapus semua <uses-permission>
    permissions = root.findall('uses-permission', namespace)
    for perm in permissions:
        root.remove(perm)

    # Simpan perubahan
    tree.write(manifest_path, encoding='utf-8', xml_declaration=True)

    # Repackage APK
    print(f"Memproses ulang APK menjadi {modified_apk_path}...")
    with zipfile.ZipFile(modified_apk_path, 'w', zipfile.ZIP_DEFLATED) as apk_zip:
        for root_dir, dirs, files in os.walk(extract_dir):
            for file in files:
                file_path = os.path.join(root_dir, file)
                arcname = os.path.relpath(file_path, extract_dir)
                apk_zip.write(file_path, arcname)

    # Bersihkan direktori sementara
    shutil.rmtree(extract_dir)
    
    print(f"APK telah dimodifikasi dan disimpan sebagai {modified_apk_path}")

if __name__ == "__main__":
    apk_path = input("Masukkan jalur ke file APK (misalnya, /storage/emulated/0/Example.apk): ")
    if os.path.isfile(apk_path):
        remove_all_permissions(apk_path)
    else:
        print("File APK tidak ditemukan.")
